{"generatedAt":1732067472086,"generateTime":421,"contents":[{"_path":"/advertise","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Advertise","description":"","layout":"default","ogImageStyle":"Emoji","ogImage":{"emoji":"💶"},"body":{"type":"root","children":[{"type":"element","tag":"center-hero","props":{"icon":"tabler:ad-2"},"children":[{"type":"element","tag":"h1","props":{"id":"advertise-your-new-app"},"children":[{"type":"text","value":"Advertise your new app!"}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Reach out to thousands of boilerplate fans, indiehackers, developers, and creators who visit and explore MintedDirectory every month. By advertising your service or product here, you’ll be able to connect directly with this engaged audience. 🚀"}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"paid-listings"},"children":[{"type":"text","value":"Paid Listings"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Paid listings  to secure a spot in our directory by paying a fee. These listings gain more exposure than free listings, ensuring that businesses are prominently displayed to potential customers. By upgrading to a paid listing, you increase the chances of being noticed in a competitive space."}]},{"type":"element","tag":"h2","props":{"id":"featured-listings"},"children":[{"type":"text","value":"Featured Listings"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Even in free directories, we offer featured or boosted listings. Businesses can pay for a premium position at the top of the directory, ensuring maximum visibility. Featured listings are highlighted to stand out, making it easier for potential customers to find and engage with businesses."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here’s an example of how featured listings will look to Minted Directory visitors:"}]},{"type":"element","tag":"feature-example","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"sponsoring"},"children":[{"type":"text","value":"Sponsoring"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sponsors can place their brand on the homepage gaining exposure to our growing audience. This is an excellent option for businesses looking to build brand awareness and connect with our community."}]},{"type":"element","tag":"sponsor-example","props":{"description":"Get a free price estimation for your roof. 🏠","title":"Mike's Roofing"},"children":[]},{"type":"element","tag":"h2","props":{"id":"contact"},"children":[{"type":"text","value":"Contact"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are interested in advertising on "},{"type":"element","tag":"site-name","props":{},"children":[]},{"type":"text","value":" contact us at "},{"type":"element","tag":"a","props":{"href":"mailto:contact@minteddirectory.com"},"children":[{"type":"text","value":"contact@minteddirectory.com"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"paid-listings","depth":2,"text":"Paid Listings"},{"id":"featured-listings","depth":2,"text":"Featured Listings"},{"id":"sponsoring","depth":2,"text":"Sponsoring"},{"id":"contact","depth":2,"text":"Contact"}]}},"_type":"markdown","_id":"content:advertise.md","_source":"content","_file":"advertise.md","_stem":"advertise","_extension":"md","sitemap":{"loc":"/advertise"},"head":{"script":[{"id":"nuxt-og-image-overrides","type":"application/json","processTemplateParams":true,"innerHTML":"[{\"title\":1,\"excerpt\":-1,\"emoji\":2},\"Advertise\",\"💶\"]","tagPosition":"bodyClose","tagPriority":30}],"meta":[{"property":"og:image","content":"/__og-image__/image/advertise/og.png"},{"property":"og:image:width","content":1200},{"property":"og:image:height","content":600},{"property":"og:image:type","content":"image/png"},{"property":"og:image:alt"},{"name":"twitter:card","content":"summary_large_image"},{"name":"twitter:image:src","content":"/__og-image__/image/advertise/og.png"},{"name":"twitter:image:width","content":1200},{"name":"twitter:image:height","content":600},{"name":"twitter:image:alt"}]}},{"_path":"/blog","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Blog","description":"Read the best articles related to the directory.","layout":"wide","body":{"type":"root","children":[{"type":"element","tag":"center-hero","props":{"icon":"tabler:zeppelin"},"children":[{"type":"element","tag":"h1","props":{"id":"welcome-to-the-blog"},"children":[{"type":"text","value":"Welcome to the Blog"}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read the best articles related to the directory.\nAnd earn SEO points by writing more articles."}]}]}]},{"type":"element","tag":"blog-grid","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:blog.md","_source":"content","_file":"blog.md","_stem":"blog","_extension":"md","sitemap":{"loc":"/blog"}},{"_path":"/blog/_dir","_dir":"blog","_draft":false,"_partial":true,"_locale":"","layout":"post","_id":"content:blog:_dir.yml","_type":"yaml","title":"Dir","_source":"content","_file":"blog/_dir.yml","_stem":"blog/_dir","_extension":"yml"},{"_path":"/blog/blog-post-1","_dir":"blog","_draft":false,"_partial":false,"_locale":"","title":"Example Blog Post","description":"content of the first blog post. 🌺","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"example-blog-post"},"children":[{"type":"text","value":"Example Blog Post"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"content of the first blog post. 🌺"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:blog:blog-post-1.md","_source":"content","_file":"blog/blog-post-1.md","_stem":"blog/blog-post-1","_extension":"md","sitemap":{"loc":"/blog/blog-post-1"}},{"_path":"/dir/_dir","_dir":"dir","_draft":false,"_partial":true,"_locale":"","layout":"listing","_id":"content:dir:_dir.yml","_type":"yaml","title":"Dir","_source":"content","_file":"dir/_dir.yml","_stem":"dir/_dir","_extension":"yml"},{"_path":"/dir/java","_dir":"dir","_draft":false,"_partial":false,"_locale":"","title":"java流模式查询","description":"","cover":"/logo.png","featured":true,"tags":["SAAS"],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"java流模式查询"},"children":[{"type":"text","value":"java流模式查询"}]},{"type":"element","tag":"h1","props":{"id":"一流式查询模式简介"},"children":[{"type":"text","value":"一、流式查询模式简介"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"流式查询模式是一种优化查询的方法，可以在查询大量数据时降低内存占用，提高查询速度。在流式查询模式下，查询结果是逐条从数据库服务器流式传输到客户端，而不是一次性将所有查询结果加载到内存中。"}]},{"type":"element","tag":"h1","props":{"id":"二jdbc流式查询模式"},"children":[{"type":"text","value":"二、JDBC流式查询模式"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"创建 PreparedStatement 对象时，需要设置 ResultSet 类型为 TYPE_FORWARD_ONLY，设置 ResultSet 并发模式为 CONCUR_READ_ONLY："}]}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"PreparedStatement pstmt = conn.prepareStatement(sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);\n\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"PreparedStatement pstmt = conn.prepareStatement(sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);\n\n"}]}]},{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"通过 setFetchSize() 方法设置每次从数据库中获取的记录数："}]}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"pstmt.setFetchSize(fetchSize);\n\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"pstmt.setFetchSize(fetchSize);\n\n"}]}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"执行查询语句后，通过 ResultSet 对象的 next() 方法逐条获取查询结果："}]}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"ResultSet rs = pstmt.executeQuery();\nwhile (rs.next()) {\n    // 处理查询结果\n}\n\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"ResultSet rs = pstmt.executeQuery();\nwhile (rs.next()) {\n    // 处理查询结果\n}\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"需要注意的是，在使用流式查询模式时，ResultSet 对象的一些方法可能会失效，比如 absolute()、last()、previous()、beforeFirst() 等方法。此外，流式查询模式只适用于查询，不适用于更新、插入、删除等操作。"}]},{"type":"element","tag":"h1","props":{"id":"三mybatis使用流式查询模式"},"children":[{"type":"text","value":"三、mybatis使用流式查询模式"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在 MyBatis 中，可以通过设置 fetchSize 属性来启用流式查询模式，示例如下："}]}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"<select id=\"selectLargeData\" resultType=\"com.example.LargeData\" fetchSize=\"100\">\n    select * from large_data_table\n</select>\n\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<select id=\"selectLargeData\" resultType=\"com.example.LargeData\" fetchSize=\"100\">\n    select * from large_data_table\n</select>\n\n"}]}]},{"type":"element","tag":"ol","props":{"start":2},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在以上示例中，fetchSize 属性设置为 100，表示每次从数据库中获取 100 条记录，从而实现流式查询。在执行查询操作时，需要通过 while 循环逐条处理查询结果，示例如下："}]}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"SqlSession sqlSession = sqlSessionFactory.openSession();\ntry {\n    List<LargeData> largeDataList = new ArrayList<>();\n    try (Cursor<LargeData> cursor = sqlSession.selectCursor(\"selectLargeData\")) {\n        while (cursor.hasNext()) {\n            LargeData largeData = cursor.next();\n            largeDataList.add(largeData);\n        }\n    }\n} finally {\n    sqlSession.close();\n}\n\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"SqlSession sqlSession = sqlSessionFactory.openSession();\ntry {\n    List<LargeData> largeDataList = new ArrayList<>();\n    try (Cursor<LargeData> cursor = sqlSession.selectCursor(\"selectLargeData\")) {\n        while (cursor.hasNext()) {\n            LargeData largeData = cursor.next();\n            largeDataList.add(largeData);\n        }\n    }\n} finally {\n    sqlSession.close();\n}\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以上示例中，使用了 MyBatis 提供的 Cursor 接口，可以通过 hasNext() 和 next() 方法逐条获取查询结果，从而实现流式处理。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"需要注意的是，流式查询模式需要考虑数据库连接的资源占用，因此在使用完毕后需要及时关闭数据库连接。此外，在处理大数据量时，也需要考虑内存占用问题，可以使用分页查询等方法来控制数据量大小。"}]},{"type":"element","tag":"h1","props":{"id":"四springbootmybatis使用流式查询模式"},"children":[{"type":"text","value":"四、springboot+mybatis使用流式查询模式"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"1.配置数据源"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n首先需要在 application.properties 文件中配置数据源，示例如下："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"spring.datasource.url=jdbc:mysql://localhost:3306/test\nspring.datasource.username=root\nspring.datasource.password=123456\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"spring.datasource.url=jdbc:mysql://localhost:3306/test\nspring.datasource.username=root\nspring.datasource.password=123456\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这里以 MySQL 数据库为例，使用 com.mysql.cj.jdbc.Driver 作为驱动程序。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"2.配置 MyBatis"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在 application.properties 文件中配置 MyBatis 相关属性，示例如下："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"mybatis.mapper-locations=classpath:mapper/*.xml\nmybatis.configuration.map-underscore-to-camel-case=true\nmybatis.configuration.default-fetch-size=100\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mybatis.mapper-locations=classpath:mapper/*.xml\nmybatis.configuration.map-underscore-to-camel-case=true\nmybatis.configuration.default-fetch-size=100\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中，mapper-locations 属性配置了 MyBatis Mapper 的 XML 文件路径，map-underscore-to-camel-case 属性指定了开启驼峰命名规则，default-fetch-size 属性指定了默认的 fetchSize。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"3.创建 Mapper"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n创建 MyBatis Mapper 接口，并在 XML 文件中配置查询语句，示例如下："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"public interface LargeDataMapper {\n    @Select(\"select * from large_data_table\")\n    @ResultType(LargeData.class)\n    Cursor<LargeData> selectLargeData();\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"public interface LargeDataMapper {\n    @Select(\"select * from large_data_table\")\n    @ResultType(LargeData.class)\n    Cursor<LargeData> selectLargeData();\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在以上示例中，使用了 MyBatis 提供的 @Select 和 @ResultType 注解，指定了查询语句和返回类型。此外，还使用了 Cursor 接口来实现流式查询。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"4.查询数据"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在 Service 层中调用 Mapper 方法，并使用 while 循环逐条处理查询结果，示例如下："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"@Service\npublic class LargeDataService {\n    @Autowired\n    private LargeDataMapper largeDataMapper;\n  \n    public List<LargeData> selectLargeData() {\n        try (Cursor<LargeData> cursor = largeDataMapper.selectLargeData()) {\n            List<LargeData> largeDataList = new ArrayList<>();\n            while (cursor.hasNext()) {\n                LargeData largeData = cursor.next();\n                largeDataList.add(largeData);\n            }\n            return largeDataList;\n        }\n    }\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"@Service\npublic class LargeDataService {\n    @Autowired\n    private LargeDataMapper largeDataMapper;\n  \n    public List<LargeData> selectLargeData() {\n        try (Cursor<LargeData> cursor = largeDataMapper.selectLargeData()) {\n            List<LargeData> largeDataList = new ArrayList<>();\n            while (cursor.hasNext()) {\n                LargeData largeData = cursor.next();\n                largeDataList.add(largeData);\n            }\n            return largeDataList;\n        }\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在以上示例中，使用了 try-with-resources 语句来确保资源及时关闭。同时，在 while 循环中逐条处理查询结果，并将结果添加到 List 中返回。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"总的来说，使用 Spring Boot 和 MyBatis 实现流式查询模式比较简单，只需要在配置文件中设置 fetchSize 属性和默认的 fetchSize，然后在 Mapper 接口中使用 Cursor 接口实现流式查询，即可避免内存溢出和提高查询速度。"}]},{"type":"element","tag":"h1","props":{"id":"五springboot-jpa流式查询模式"},"children":[{"type":"text","value":"五、springboot jpa流式查询模式"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"首先，我们需要创建一个实体类 User，用于表示用户信息："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"@Entity\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String name;\n\n    private Integer age;\n\n    // 省略 getter 和 setter 方法\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"@Entity\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String name;\n\n    private Integer age;\n\n    // 省略 getter 和 setter 方法\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然后，我们需要创建一个 UserRepository 接口，用于定义查询方法："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"@Repository\npublic interface UserRepository extends JpaRepository<User, Long> {\n\n    @Query(\"SELECT u FROM User u\")\n    Stream<User> findAllByStream();\n\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"@Repository\npublic interface UserRepository extends JpaRepository<User, Long> {\n\n    @Query(\"SELECT u FROM User u\")\n    Stream<User> findAllByStream();\n\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上面的代码中，我们使用 @Query 注解定义了一个查询语句，该语句返回一个 Stream"},{"type":"element","tag":"user","props":{},"children":[{"type":"text","value":" 对象，该对象包含所有用户。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接下来，我们需要编写一个 UserService 类，用于调用 UserRepository 中的方法："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"@Service\npublic class UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Transactional(readOnly = true)\n    public void findAllUsersByStream() {\n        try (Stream<User> stream = userRepository.findAllByStream()) {\n            stream.forEach(user -> {\n                // 处理用户数据\n                System.out.println(user);\n            });\n        }\n    }\n\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"@Service\npublic class UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Transactional(readOnly = true)\n    public void findAllUsersByStream() {\n        try (Stream<User> stream = userRepository.findAllByStream()) {\n            stream.forEach(user -> {\n                // 处理用户数据\n                System.out.println(user);\n            });\n        }\n    }\n\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上面的代码中，我们注入了 UserRepository 对象，并且定义了一个 findAllUsersByStream 方法，该方法使用 @Transactional 注解将方法声明为只读事务。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在方法中，我们使用 try-with-resources 语句来获取一个 Stream"},{"type":"element","tag":"user","props":{},"children":[{"type":"text","value":" 对象，并使用 forEach 方法遍历所有用户数据。由于使用了 try-with-resources 语句，所以当处理完用户数据后，stream 对象会自动关闭。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最后，我们可以在应用程序的入口类中调用 UserService 中的方法："}]},{"type":"element","tag":"pre","props":{"className":["language-java"],"code":"@SpringBootApplication\npublic class Application implements CommandLineRunner {\n\n    @Autowired\n    private UserService userService;\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n    @Override\n    public void run(String... args) throws Exception {\n        userService.findAllUsersByStream();\n    }\n\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"@SpringBootApplication\npublic class Application implements CommandLineRunner {\n\n    @Autowired\n    private UserService userService;\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n    @Override\n    public void run(String... args) throws Exception {\n        userService.findAllUsersByStream();\n    }\n\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上面的代码中，我们注入了 UserService 对象，并在 run 方法中调用了 findAllUsersByStream 方法。"}]},{"type":"element","tag":"h1","props":{"id":"注流式查询模式速度会不会比较慢查询到的信息"},"children":[{"type":"text","value":"注：流式查询模式速度会不会比较慢(查询到的信息)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"流式查询模式并不一定比非流式查询模式慢，其查询速度主要取决于数据访问方式和网络传输速度等因素。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"流式查询模式的优点是可以避免将大量数据一次性加载到内存中，降低了内存占用，尤其是在处理大数据量时可以明显提高程序性能。此外，流式查询模式还可以更快地获取第一条数据，因为数据是逐条传输的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是，流式查询模式的缺点是每次从数据库获取数据的时间较长，因为数据是逐条传输的。此外，流式查询模式可能会增加数据库服务器的负载，因为服务器需要不断发送数据到客户端。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"综上所述，流式查询模式的使用要根据具体情况来决定，需要考虑数据量大小、网络传输速度、查询方式等因素。对于大数据量的查询操作，流式查询模式往往是更优的选择，可以显著提高程序性能。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:dir:java流模式查询.md","_source":"content","_file":"dir/java流模式查询.md","_stem":"dir/java流模式查询","_extension":"md","sitemap":{"loc":"/dir/java"}},{"_path":"/dir/starter","_dir":"dir","_draft":false,"_partial":false,"_locale":"","title":"First Listing","description":"This is an example listing to get started.","cover":"/logo.png","featured":true,"tags":["SAAS"],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"first-listing"},"children":[{"type":"text","value":"First Listing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is an example listing to get started."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:dir:starter.md","_source":"content","_file":"dir/starter.md","_stem":"dir/starter","_extension":"md","sitemap":{"loc":"/dir/starter"}},{"_path":"/","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"这是您全新的目录！ 👋                           ","description":"您可以在此页面上使用 Markdown 进行自定义。","layout":"wide","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"这是您全新的目录"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"这是您全新的目录！"}]},{"type":"text","value":" 👋                           "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"您可以在此页面上使用 Markdown 进行自定义。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"查看📚"},{"type":"element","tag":"a","props":{"href":"https://minteddirectory.com/docs","rel":["nofollow"]},"children":[{"type":"text","value":"文档"}]},{"type":"text","value":"了解如何自定义您的着陆页。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"从其他目录中获取灵感："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"📗"},{"type":"element","tag":"a","props":{"href":"https://nuxtstarters.com","rel":["nofollow"]},"children":[{"type":"text","value":" Nuxt.js 入门套件"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"🏠 "},{"type":"element","tag":"a","props":{"href":"https://fortytwotools.com","rel":["nofollow"]},"children":[{"type":"text","value":"四十二工具"}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is your starting listings grid 👇"}]},{"type":"element","tag":"search","props":{},"children":[]},{"type":"element","tag":"directory-grid","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:index.md","_source":"content","_file":"index.md","_stem":"index","_extension":"md","sitemap":{"loc":"/"}},{"_path":"/legal/privacy-policy","_dir":"legal","_draft":false,"_partial":false,"_locale":"","title":"Privacy Policy","description":"","body":{"type":"root","children":[],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:legal:privacy-policy.md","_source":"content","_file":"legal/privacy-policy.md","_stem":"legal/privacy-policy","_extension":"md","sitemap":{"loc":"/legal/privacy-policy"}},{"_path":"/legal/terms-of-service","_dir":"legal","_draft":false,"_partial":false,"_locale":"","title":"Terms Of Service","description":"","body":{"type":"root","children":[],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:legal:terms-of-service.md","_source":"content","_file":"legal/terms-of-service.md","_stem":"legal/terms-of-service","_extension":"md","sitemap":{"loc":"/legal/terms-of-service"}},{"_path":"/submit","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Grow your business by submitting it to directory x.","description":"Submit your startup to the Minted directory to showcase your business to a growing community of founders, developers, and entrepreneurs.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"grow-your-business-by-submitting-it-to-directory-x"},"children":[{"type":"text","value":"Grow your business by submitting it to directory x."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Submit your startup to the Minted directory to showcase your business to a growing community of founders, developers, and entrepreneurs."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"directory x gets "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"+100"}]},{"type":"text","value":" visitors each month."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"directory x gets "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"10"}]},{"type":"text","value":" unique visitors each month."}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"tally-form","props":{"embed":"https://tally.so/embed/mOYErk?alignLeft=1&hideTitle=1&transparentBackground=1&dynamicHeight=1"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:submit.md","_source":"content","_file":"submit.md","_stem":"submit","_extension":"md","sitemap":{"loc":"/submit"}}],"navigation":[{"title":"Advertise","_path":"/advertise","layout":"default"},{"title":"Blog","_path":"/blog","children":[{"title":"Example Blog Post","_path":"/blog/blog-post-1"}],"layout":"wide"},{"title":"Dir","_path":"/dir","children":[{"title":"java流模式查询","_path":"/dir/java"},{"title":"First Listing","_path":"/dir/starter"}],"layout":"listing"},{"title":"这是您全新的目录！ 👋                           ","_path":"/","layout":"wide"},{"title":"Legal","_path":"/legal","children":[{"title":"Privacy Policy","_path":"/legal/privacy-policy"},{"title":"Terms Of Service","_path":"/legal/terms-of-service"}]},{"title":"Grow your business by submitting it to directory x.","_path":"/submit"}]}